import _extends from "@babel/runtime/helpers/extends";
import { Fragment, Children, cloneElement, isValidElement } from 'react';
import { useStore } from './store';
import { jsxs as _jsxs } from "react/jsx-runtime";
export var Render = _ref => {
  var {
    children
  } = _ref;
  var {
    fields = {},
    buttons = {},
    extra = {},
    $$index = {},
    blocks = {},
    data
  } = useStore();
  var childs = typeof children === 'function' ? [] : Children.toArray(children);
  return /*#__PURE__*/_jsxs(Fragment, {
    children: [typeof children === 'function' && ! /*#__PURE__*/isValidElement(children) && children({
      fields,
      buttons,
      blocks,
      extra,
      $$index
    }, _extends({}, data)), typeof children !== 'function' && childs.map((child, key) => {
      if (! /*#__PURE__*/isValidElement(child)) return null;
      return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {
        key
      }));
    })]
  });
};
Render.displayName = 'Login.Render';